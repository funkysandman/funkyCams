<Type Name="TFScope" FullName="TensorFlow.TFScope">
  <TypeSignature Language="C#" Value="public class TFScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TFScope extends System.Object implements class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>TensorFlowSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            TFGraph name scope handle
            </summary>
    <remarks>
            Instances of this class when disposed restore the CurrentNameScope to the
            value they had when the TFGraph.WithScope method was called.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Pops the name space to the previous namescope in use.
            </summary>
        <remarks>Call <see cref="M:TensorFlow.TFScope.Dispose" /> when you are finished using the <see cref="T:TensorFlow.TFScope" />
            to restore the previous name scope in use in the <see cref="T:TensorFlow.TFGraph" />.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
