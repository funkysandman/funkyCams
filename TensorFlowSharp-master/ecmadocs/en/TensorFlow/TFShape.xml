<Type Name="TFShape" FullName="TensorFlow.TFShape">
  <TypeSignature Language="C#" Value="public class TFShape" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TFShape extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>TensorFlowSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the shape of a tensor, it describes how many dimensions the tensor has in a given axis
            </summary>
    <remarks>
      <para>
            The shapes can be created by calling the constructor with the number of dimensions
            in the shape.   The null value is used to specify that the shape is unknown,
            an empty array is used to create a scalar, and other values are used to specify
            the number of dimensions.
            </para>
      <para>
            For the Unknown case, you can use <see cref="P:TensorFlor.TFShape.Unknown" />, for
            scalars, you can use the <see cref="P:TensorFlor.TFShape.Scalar" /> shape.
            </para>
      <para>
            To create a 2-element vector, use:
            new TFShape (2)
            </para>
      <para>
            To create a 2x3 matrix, use:
            new TFShape (2, 3)
            </para>
      <para>
            To create a shape with an unknown number of elements, you can pass the value
            -1.  This is typically used to indicate the shape of tensors that represent a
            variable-sized batch of values.
            </para>
      <para>
            To create a matrix with 4 columns and an unknown number of rows:
            var batch = new TFShape (-1, 4)
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TFShape (long[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64[] args) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="args" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="args">This is a params argument, so you can provide multiple values to it.  
            A null value means that this is an unknown shape, a single value is used to create a vector,
            two values are used to create a 2-D matrix and so on.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:TensorFlow.TFShape" /> class.
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AsTensor">
      <MemberSignature Language="C#" Value="public TensorFlow.TFTensor AsTensor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFTensor AsTensor() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the shape as a 1-dimensional tensor with each element corresponding to the specified shape dimension.
            </summary>
        <returns>The tensor.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLength">
      <MemberSignature Language="C#" Value="public int GetLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLength(int32 dimension) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">Dimension.</param>
        <summary>
            Gets the length of the specified dimension in the tensor
            </summary>
        <returns>The length, -1 for shapes that have an unknown dimension.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullySpecified">
      <MemberSignature Language="C#" Value="public bool IsFullySpecified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullySpecified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether all the dimensions in the <see cref="T:TensorFlow.TFShape" /> are fully specified.
            </summary>
        <value>
          <c>true</c> if is fully specified; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLongArray">
      <MemberSignature Language="C#" Value="public bool IsLongArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLongArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether one of the dimensions <see cref="T:TensorFlow.TFShape" /> in the shape is larger than Int32.MaxValue.
            </summary>
        <value>
          <c>true</c> if is long array; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public long this[int idx] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idx" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="idx">Index.</param>
        <summary>
            Gets the dimensions for the specified index.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumDimensions">
      <MemberSignature Language="C#" Value="public int NumDimensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumDimensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of dimensions represented by this shape.
            </summary>
        <value>The number dimensions, -1 if the number of dimensions is unknown, 0 if the shape represent a scalar, 1 for a vector, 2 for a matrix and so on..</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFShape op_Addition (TensorFlow.TFShape left, TensorFlow.TFShape right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class TensorFlow.TFShape op_Addition(class TensorFlow.TFShape left, class TensorFlow.TFShape right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="TensorFlow.TFShape" />
        <Parameter Name="right" Type="TensorFlow.TFShape" />
      </Parameters>
      <Docs>
        <param name="left">The first <see cref="T:TensorFlow.TFShape" /> to add.</param>
        <param name="right">The second <see cref="T:TensorFlow.TFShape" /> to add.</param>
        <summary>
            Adds a <see cref="T:TensorFlow.TFShape" /> to a <see cref="T:TensorFlow.TFShape" />, yielding a shape made up of the concatenation of the first and the second shapes.
            </summary>
        <returns>The <see cref="T:TensorFlow.TFShape" /> that is the sum of the values of <c>left</c> and <c>right</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFTensor op_Implicit (TensorFlow.TFShape shape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class TensorFlow.TFTensor op_Implicit(class TensorFlow.TFShape shape) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="TensorFlow.TFShape" />
      </Parameters>
      <Docs>
        <param name="shape">The shape.</param>
        <summary>
            Performs an implicit conversion from <see cref="T:TensorFlow.TFShape" /> to <see cref="T:TensorFlow.TFTensor" />.
            </summary>
        <returns>The result of the conversion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scalar">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFShape Scalar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class TensorFlow.TFShape Scalar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This shape is used to represent scalar values.
            </summary>
        <value>The scalar.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public long[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64[] ToArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the shape as an array
            </summary>
        <returns>null if the shape represents an unknown shape, otherwise an array with N elements, one per dimension, and each element can be either -1 (if the dimension size is unspecified) or the size of the dimension.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIntArray">
      <MemberSignature Language="C#" Value="public int[] ToIntArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] ToIntArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the shape as an array
            </summary>
        <returns>null if the shape represents an unknown shape, otherwise an array with N elements, one per dimension, and each element can be either -1 (if the dimension size is unspecified) or the size of the dimension.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:TensorFlow.TFShape" />.
            </summary>
        <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:TensorFlow.TFShape" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFShape Unknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class TensorFlow.TFShape Unknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Represents an unknown number of dimensions in the tensor.
            </summary>
        <value>The unknown.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
