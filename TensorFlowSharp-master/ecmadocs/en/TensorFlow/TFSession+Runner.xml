<Type Name="TFSession+Runner" FullName="TensorFlow.TFSession+Runner">
  <TypeSignature Language="C#" Value="public class TFSession.Runner" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit TFSession/Runner extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>TensorFlowSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Use the runner class to easily configure inputs, outputs and targets to be passed to the session runner.
            </summary>
    <remarks>
      <para>
            The runner has a simple API that allows developers to call the AddTarget, AddInput, AddOutput and Fetch
            to construct the parameters that will be passed to the TFSession.Run method.
            </para>
      <para>
            Instances of this class are created by calling the GetRunner method on the TFSession.
            </para>
      <para>
            The various methods in this class return an instance to the Runner itsel, to allow
            to easily construct chains of execution like this:
            </para>
      <code>
            var result = session.GetRunner ().AddINput (myInput).Fetch (MyOutput).Run ();
            </code>
      <para>
            You do not need to chain the operations, this works just the same:
            </para>
      <code>
            runner = session.GetRunner ();
            runner.AddInput(myInput);
            runner.Fetch(myOutput);
            var results = runner.Run();
            </code>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddInput">
      <MemberSignature Language="C#" Value="public TensorFlow.TFSession.Runner AddInput (string input, TensorFlow.TFTensor value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFSession/Runner AddInput(string input, class TensorFlow.TFTensor value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFSession+Runner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="value" Type="TensorFlow.TFTensor" />
      </Parameters>
      <Docs>
        <param name="input">Incoming port, with an optional index separated by a colon.</param>
        <param name="value">Value to assing to the incoming port.</param>
        <summary>
            Adds an input to the session specified by name, with an optional index in the operation (separated by a colon).
            </summary>
        <returns>An instance to the runner, so you can easily chain the operations together.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInput">
      <MemberSignature Language="C#" Value="public TensorFlow.TFSession.Runner AddInput (TensorFlow.TFOutput input, TensorFlow.TFTensor value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFSession/Runner AddInput(valuetype TensorFlow.TFOutput input, class TensorFlow.TFTensor value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFSession+Runner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="TensorFlow.TFOutput" />
        <Parameter Name="value" Type="TensorFlow.TFTensor" />
      </Parameters>
      <Docs>
        <param name="input">Incoming port.</param>
        <param name="value">Value to assing to the incoming port.</param>
        <summary>
            Adds an input to the session
            </summary>
        <returns>An instance to the runner, so you can easily chain the operations together.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTarget">
      <MemberSignature Language="C#" Value="public TensorFlow.TFSession.Runner AddTarget (string[] targetNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFSession/Runner AddTarget(string[] targetNames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFSession+Runner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetNames">One or more target names.</param>
        <summary>
            Adds the specified operation names as the ones to be retrieved.
            </summary>
        <returns>An instance to the runner, so you can easily chain the operations together.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTarget">
      <MemberSignature Language="C#" Value="public TensorFlow.TFSession.Runner AddTarget (TensorFlow.TFOperation[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFSession/Runner AddTarget(class TensorFlow.TFOperation[] targets) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFSession+Runner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="TensorFlow.TFOperation[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targets">One or more targets.</param>
        <summary>
            Adds the specified operations as the ones to be retrieved.
            </summary>
        <returns>An instance to the runner, so you can easily chain the operations together.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public TensorFlow.TFSession.Runner Fetch (string operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFSession/Runner Fetch(string operation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFSession+Runner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operation">The name of the operation in the graph, which might be a simple name, or it might be name:index, 
            where the index is the .</param>
        <summary>
            Makes the Run method return the output of the tensor referenced by operation, the operation string can contain the output index.
            </summary>
        <returns>The instance of runner, to allow chaining operations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public TensorFlow.TFSession.Runner Fetch (string[] outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFSession/Runner Fetch(string[] outputs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFSession+Runner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputs" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="outputs">The output sreferencing a specified tensor.</param>
        <summary>
            Makes the Run method return the output of all the tensor referenced by outputs.
            </summary>
        <returns>The instance of runner, to allow chaining operations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public TensorFlow.TFSession.Runner Fetch (TensorFlow.TFOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFSession/Runner Fetch(valuetype TensorFlow.TFOutput output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFSession+Runner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="TensorFlow.TFOutput" />
      </Parameters>
      <Docs>
        <param name="output">The output referencing a specified tensor.</param>
        <summary>
            Makes the Run method return the output of the tensor referenced by output
            </summary>
        <returns>The instance of runner, to allow chaining operations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public TensorFlow.TFSession.Runner Fetch (TensorFlow.TFOutput[] outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFSession/Runner Fetch(valuetype TensorFlow.TFOutput[] outputs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFSession+Runner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputs" Type="TensorFlow.TFOutput[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="outputs">The outputs referencing a specified tensor.</param>
        <summary>
            Makes the Run method return the output of all the tensor referenced by outputs.
            </summary>
        <returns>The instance of runner, to allow chaining operations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public TensorFlow.TFSession.Runner Fetch (string operation, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFSession/Runner Fetch(string operation, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFSession+Runner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="operation">The name of the operation in the graph.</param>
        <param name="index">The index of the output in the operation.</param>
        <summary>
            Makes the Run method return the index-th output of the tensor referenced by operation.
            </summary>
        <returns>The instance of runner, to allow chaining operations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public TensorFlow.TFTensor[] Run (TensorFlow.TFStatus status = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFTensor[] Run(class TensorFlow.TFStatus status) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="TensorFlow.TFStatus" />
      </Parameters>
      <Docs>
        <param name="status">Status buffer, if specified a status code will be left here, if not specified, a <see cref="T:TensorFlow.TFException" /> exception is raised if there is an error.</param>
        <summary>
             Execute the graph fragments necessary to compute all requested fetches.
            </summary>
        <returns>One TFTensor for each call to Fetch that you made, in the order that you made them.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public TensorFlow.TFTensor Run (TensorFlow.TFOutput operation, TensorFlow.TFStatus status = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class TensorFlow.TFTensor Run(valuetype TensorFlow.TFOutput operation, class TensorFlow.TFStatus status) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFTensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="TensorFlow.TFOutput" />
        <Parameter Name="status" Type="TensorFlow.TFStatus" />
      </Parameters>
      <Docs>
        <param name="operation">The output of the operation.</param>
        <param name="status">Status buffer, if specified a status code will be left here, if not specified, a <see cref="T:TensorFlow.TFException" /> exception is raised if there is an error.</param>
        <summary>
            Run the specified operation, by adding it implicity to the output, single return value
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This method is a convenience method, and when you call it, it will clear any 
            calls that you might have done to Fetch() and use the specified operation to Fetch
            instead.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunMetadata">
      <MemberSignature Language="C#" Value="public TensorFlow.TFBuffer RunMetadata;" />
      <MemberSignature Language="ILAsm" Value=".field public class TensorFlow.TFBuffer RunMetadata" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Protocol buffer encoded block containing the metadata passed to the <see cref="M:TensorFlow.TFSession.Run" /> method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunOptions">
      <MemberSignature Language="C#" Value="public TensorFlow.TFBuffer RunOptions;" />
      <MemberSignature Language="ILAsm" Value=".field public class TensorFlow.TFBuffer RunOptions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Protocol buffer encoded block containing the run options passed to the <see cref="M:TensorFlow.TFSession.Run" /> method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
