<Type Name="TFLibrary" FullName="TensorFlow.TFLibrary">
  <TypeSignature Language="C#" Value="public class TFLibrary : TensorFlow.TFDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TFLibrary extends TensorFlow.TFDisposable" />
  <AssemblyInfo>
    <AssemblyName>TensorFlowSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>TensorFlow.TFDisposable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a dynamically loaded library of TensorFlow operations, use to load and consume TensorFlow operations from an external library.
            </summary>
    <remarks>
            Use the static method <see cref="M:Tensorflow.TFLibrary.FromFile" /> to load a dynamic library.
            Once that function returns
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static TensorFlow.TFLibrary FromFile (string libraryFile, TensorFlow.TFStatus status = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class TensorFlow.TFLibrary FromFile(string libraryFile, class TensorFlow.TFStatus status) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TensorFlow.TFLibrary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryFile" Type="System.String" />
        <Parameter Name="status" Type="TensorFlow.TFStatus" />
      </Parameters>
      <Docs>
        <param name="libraryFile">Name of the library to load, this is a platform specific name.</param>
        <param name="status">Status buffer, if specified a status code will be left here, if not specified, a <see cref="T:TensorFlow.TFException" /> exception is raised if there is an error.</param>
        <summary>
            Load the library specified by and register the operations and
            kernels present in that library.
            </summary>
        <returns>Handle to the loaded library.</returns>
        <remarks>
            The provided <paramref name="libraryFile" /> is passed to the operating system dynamic loader
            and it will load the library using the operating system defined search paths and rules to load this.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
